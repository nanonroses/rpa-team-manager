version: '3.8'

services:
  # Frontend - React Application
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rpa-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:3001
    restart: unless-stopped
    networks:
      - rpa-network

  # Backend - Node.js API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rpa-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      - JWT_EXPIRES_IN=8h
      - DB_PATH=/app/data/database.sqlite
      - UPLOAD_PATH=/app/uploads
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - rpa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database backup service
  backup:
    image: alpine:latest
    container_name: rpa-backup
    volumes:
      - ./data:/backup/data:ro
      - ./uploads:/backup/uploads:ro
      - ./backups:/backups
      - ./scripts:/scripts:ro
    command: >
      sh -c "
        echo '0 2 * * * /scripts/backup.sh' > /var/spool/cron/crontabs/root &&
        crond -f
      "
    restart: unless-stopped
    networks:
      - rpa-network

  # Optional: Database browser for development
  db-browser:
    image: coleifer/sqlite-web
    container_name: rpa-db-browser
    ports:
      - "8080:8080"
    volumes:
      - ./data:/data
    command: sqlite_web -H 0.0.0.0 -x /data/database.sqlite
    profiles:
      - development
    networks:
      - rpa-network

networks:
  rpa-network:
    driver: bridge

volumes:
  data:
    driver: local
  uploads:
    driver: local
  backups:
    driver: local